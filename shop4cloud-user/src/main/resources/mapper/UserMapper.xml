<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop4j.cloud.user.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.shop4j.cloud.user.entity.UserDO">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from u_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.shop4j.cloud.user.entity.UserDO">
    insert into u_user (user_id, create_time, update_time, 
      nick_name, pic, status
      )
    values (#{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{nickName,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.shop4j.cloud.user.entity.UserDO">
    update u_user
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      nick_name = #{nickName,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select user_id, create_time, update_time, nick_name, pic, status
    from u_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select user_id, create_time, update_time, nick_name, pic, status
    from u_user
  </select>
</mapper>